name: Continuous Delivery

on: 
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'

jobs:
  # checkout, build, deploy, notify mattermost
  build:
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{ steps.semanticversion.outputs.new_version }}

    steps:
    - uses: actions/checkout@v3

    - name: Bump version and push tag
      id: semanticversion
      uses: mathieudutour/github-tag-action@v6.1
      with:
        release_branches: master
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify and print new build number
      run: |
        if echo '${{ steps.semanticversion.outputs.new_tag }}' |grep -Eq '^v[0-9]+[.][0-9]+[.][0-9]+$'; then 
          echo Tag '${{ steps.semanticversion.outputs.new_tag }}', New version '${{ steps.semanticversion.outputs.new_version }}', Changelog '${{ steps.semanticversion.outputs.changelog }}'
        else
          echo 'unexpected tag format - aborting'
          exit -1
        fi

    ## Enable Caching
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    ## Configure JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'

    ## Build with maven
    - name: Prepare maven settings
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>github</id><username>x-access-token</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml 

    - name: Set version
      id: version
      run: |
        echo Releasing as ${{ steps.semanticversion.outputs.new_version }}
        mvn versions:set -DnewVersion=${{ steps.semanticversion.outputs.new_version }}

    - name: Perform build
      run: mvn -B package --file pom.xml

    ## Deploy
    - name: Deploy package
      env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}
            REPOSITORY_USERID: ${{ secrets.REPOSITORY_USERID }}
            REPOSITORY_CREDENTIALS: ${{ secrets.REPOSITORY_CREDENTIALS }}
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>neverpile</id><username>${REPOSITORY_USERID}</username><password>${REPOSITORY_CREDENTIALS}</password></server></servers></settings>" > ~/.m2/settings.xml 
        mvn deploy -Dmaven.test.skip.exec=true -DaltDeploymentRepository=neverpile::default::${REPOSITORY_URL}
        
      ## Notify Mattermost
    - name: Notify Developers
      uses: 8398a7/action-slack@v3
      with:
        username: GitHub
        icon_emoji: octocat
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref
        text: Released new version `${{ steps.semanticversion.outputs.new_version }}` of *${{ github.repository }}* to ${{ secrets.REPOSITORY_URL }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: ${{ github.actor != 'dependabot[bot]' }}


  # Update README.md
  updateReadme:
    needs: build
    uses: levigo/reusable-workflows/.github/workflows/update-readme-md.yml@v3
    secrets: inherit
    with:
      releaseVersion: ${{ needs.build.outputs.releaseVersion }}


